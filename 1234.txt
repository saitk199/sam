#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
using namespace std;
int KUCHKA1(int RAZMERKUCHKA1, int Drawnmatches)
{
	RAZMERKUCHKA1 = RAZMERKUCHKA1 - Drawnmatches;
	return RAZMERKUCHKA1;
}
int KUCHKA2(int RAZMERKUCHKA2, int Drawnmatches)
{
	RAZMERKUCHKA2 = RAZMERKUCHKA2 - Drawnmatches;
	return RAZMERKUCHKA2;
}
int KUCHKA3(int RAZMERKUCHKA3, int Drawnmatches)
{
	RAZMERKUCHKA3 = RAZMERKUCHKA3 - Drawnmatches;
	return RAZMERKUCHKA3;
}
void FUNKCIAPvP(int originalsize)
{
	int RAZMERKUCHKA1, RAZMERKUCHKA2, RAZMERKUCHKA3, NUMBER, Drawnmatches;
	RAZMERKUCHKA1 = originalsize;
	RAZMERKUCHKA2 = originalsize;
	RAZMERKUCHKA3 = originalsize;
	bool konec;
	konec = true;
	while (konec == true)
	{
		if ((RAZMERKUCHKA1 + RAZMERKUCHKA2 + RAZMERKUCHKA3) != 0)
		{
			cout << "Player 1" << endl << "Выберете одну из 3-х кучек: ";
			cin >> NUMBER;
			cout << endl << "Введите количество вытягиваемых спичек: ";
			cin >> Drawnmatches;
			switch (NUMBER)
			{
				case 1:
				{
					if (RAZMERKUCHKA1 == 0)
					{
						cout << "Выберете другую кучку эта пустая" << endl;
						continue;
					}
					else
					{
						if (Drawnmatches > RAZMERKUCHKA1)
						{
							cout << endl << "Выберете другое количество спичек (не более " << RAZMERKUCHKA1 << " штук): ";
							cin >> Drawnmatches;
							RAZMERKUCHKA1 = KUCHKA1(RAZMERKUCHKA1, Drawnmatches);
						}
						else
						{
							RAZMERKUCHKA1 = KUCHKA1(RAZMERKUCHKA1, Drawnmatches);
						}
					}
					break;
				}
				case 2:
				{
					if (RAZMERKUCHKA2 == 0)
					{
						cout << "Выберете другую кучку эта пустая" << endl;
						continue;
					}
					else
					{
						if (Drawnmatches > RAZMERKUCHKA2)
						{
							cout << endl << "Выберете другое количество спичек (не более " << RAZMERKUCHKA2 << " штук): ";
							cin >> Drawnmatches;
							RAZMERKUCHKA2 = KUCHKA2(RAZMERKUCHKA2, Drawnmatches);
						}
						else
						{
							RAZMERKUCHKA2 = KUCHKA2(RAZMERKUCHKA2, Drawnmatches);
						}
					}
					break;
				}
				case 3:
				{
					if (RAZMERKUCHKA3 == 0)
					{
						cout << "Выберете другую кучку эта пустая" << endl;
						continue;
					}
					else
					{
						if (Drawnmatches > RAZMERKUCHKA3)
						{
							cout << endl << "Выберете другое количество спичек (не более " << RAZMERKUCHKA3 << " штук): ";
							cin >> Drawnmatches;
							RAZMERKUCHKA3 = KUCHKA3(RAZMERKUCHKA3, Drawnmatches);
						}
						else
						{
							RAZMERKUCHKA3 = KUCHKA3(RAZMERKUCHKA3, Drawnmatches);
						}
					}
					break;
				}
				default:
				{
					cout << "ERROR";
				}
			}
		}
		else
		{
			cout << "Player 2 - Win!!" <<endl;
			konec = false;
			break;
		}
		if ((RAZMERKUCHKA1 + RAZMERKUCHKA2 + RAZMERKUCHKA3) != 0)
		{
			cout << "Player 2" << endl << "Выберете одну из 3-х кучек: ";
			cin >> NUMBER;
			cout << endl << "Введите количество вытягиваемых спичек: ";
			cin >> Drawnmatches;
			switch (NUMBER)
			{
				case 1:
				{
					if (RAZMERKUCHKA1 == 0)
					{
						cout << "Выберете другую кучку эта пустая" << endl;
						continue;
					}
					else
					{
						if (Drawnmatches > RAZMERKUCHKA1)
						{
							cout << endl << "Выберете другое количество спичек (не более " << RAZMERKUCHKA1 << " штук): ";
							cin >> Drawnmatches;
							RAZMERKUCHKA1 = KUCHKA1(RAZMERKUCHKA1, Drawnmatches);
						}
						else
						{
							RAZMERKUCHKA1 = KUCHKA1(RAZMERKUCHKA1, Drawnmatches);
						}
					}
					break;
				}
				case 2:
				{
					if (RAZMERKUCHKA2 == 0)
					{
						cout << "Выберете другую кучку эта пустая" << endl;
						continue;
					}
					else
					{
						if (Drawnmatches > RAZMERKUCHKA2)
						{
							cout << endl << "Выберете другое количество спичек (не более " << RAZMERKUCHKA2 << " штук): ";
							cin >> Drawnmatches;
							RAZMERKUCHKA2 = KUCHKA2(RAZMERKUCHKA2, Drawnmatches);
						}
						else
						{
							RAZMERKUCHKA2 = KUCHKA2(RAZMERKUCHKA2, Drawnmatches);
						}
					}
					break;
				}
				case 3:
				{
					if (RAZMERKUCHKA3 == 0)
					{
						cout << "Выберете другую кучку эта пустая" << endl;
						continue;
					}
					else
					{
						if (Drawnmatches > RAZMERKUCHKA3)
						{
							cout << endl << "Выберете другое количество спичек (не более " << RAZMERKUCHKA3 << " штук): ";
							cin >> Drawnmatches;
							RAZMERKUCHKA3 = KUCHKA3(RAZMERKUCHKA3, Drawnmatches);
						}
						else
						{
							RAZMERKUCHKA3 = KUCHKA3(RAZMERKUCHKA3, Drawnmatches);
						}
					}
					break;
				}
				default:
				{
					cout << "ERROR";
				}
			}
		}
		else
		{
			cout << "Player 1 - Win!!" << endl;
			konec = false;
			break;
		}
	}
}
void FUNKCIAPvE(int originalsize)
{
	int RAZMERKUCHKA1, RAZMERKUCHKA2, RAZMERKUCHKA3, NUMBER, Drawnmatches;
	RAZMERKUCHKA1 = originalsize;
	RAZMERKUCHKA2 = originalsize;
	RAZMERKUCHKA3 = originalsize;
	bool konec;
	konec = true;
	while (konec == true)
	{
		if ((RAZMERKUCHKA1 + RAZMERKUCHKA2 + RAZMERKUCHKA3) != 0)
		{
			cout << "Player 1" << endl << "Выберете одну из 3-х кучек: ";
			cin >> NUMBER;
			cout << endl << "Введите количество вытягиваемых спичек: ";
			cin >> Drawnmatches;
			switch (NUMBER)
			{
				case 1:
				{
					if (RAZMERKUCHKA1 == 0)
					{
						cout << "Выберете другую кучку эта пустая" << endl;
						continue;
					}
					else
					{
						if (Drawnmatches > RAZMERKUCHKA1)
						{
							cout << endl << "Выберете другое количество спичек (не более " << RAZMERKUCHKA1 << " штук): ";
							cin >> Drawnmatches;
							RAZMERKUCHKA1 = KUCHKA1(RAZMERKUCHKA1, Drawnmatches);
						}
						else
						{
							RAZMERKUCHKA1 = KUCHKA1(RAZMERKUCHKA1, Drawnmatches);
						}
					}
					break;
				}
				case 2:
				{
					if (RAZMERKUCHKA2 == 0)
					{
						cout << "Выберете другую кучку эта пустая" << endl;
						continue;
					}
					else
					{
						if (Drawnmatches > RAZMERKUCHKA2)
						{
							cout << endl << "Выберете другое количество спичек (не более " << RAZMERKUCHKA2 << " штук): ";
							cin >> Drawnmatches;
							RAZMERKUCHKA2 = KUCHKA2(RAZMERKUCHKA2, Drawnmatches);
						}
						else
						{
							RAZMERKUCHKA2 = KUCHKA2(RAZMERKUCHKA2, Drawnmatches);
						}
					}
					break;
				}
				case 3:
				{
					if (RAZMERKUCHKA3 == 0)
					{
						cout << "Выберете другую кучку эта пустая" << endl;
						continue;
					}
					else
					{
						if (Drawnmatches > RAZMERKUCHKA3)
						{
							cout << endl << "Выберете другое количество спичек (не более " << RAZMERKUCHKA3 << " штук): ";
							cin >> Drawnmatches;
							RAZMERKUCHKA3 = KUCHKA3(RAZMERKUCHKA3, Drawnmatches);
						}
						else
						{
							RAZMERKUCHKA3 = KUCHKA3(RAZMERKUCHKA3, Drawnmatches);
						}
					}
					break;
				}
				default:
				{
					cout <<endl << "ERROR";
				}
			}
		}
		else
		{
			cout << "Computer - Win!!" << endl;
			konec = false;
			break;
		}
		if ((RAZMERKUCHKA1 + RAZMERKUCHKA2 + RAZMERKUCHKA3) != 0)
		{
			NUMBER = rand() % 3 + 1;
			switch (NUMBER)
			{
				case 1:
				{
					if (RAZMERKUCHKA1 == 0)
					{
						continue;
					}
					else
					{
						Drawnmatches = rand() % RAZMERKUCHKA1 + 1;
						RAZMERKUCHKA1 = KUCHKA1(RAZMERKUCHKA1, Drawnmatches);
					}
					break;
				}
				case 2:
				{
					if (RAZMERKUCHKA2 == 0)
					{
						continue;
					}
					else
					{
						Drawnmatches = rand() % RAZMERKUCHKA2 + 1;
						RAZMERKUCHKA2 = KUCHKA1(RAZMERKUCHKA2, Drawnmatches);
					}
					break;
				}
				case 3:
				{
					if (RAZMERKUCHKA3 == 0)
					{
						continue;
					}
					else
					{
						Drawnmatches = rand() % RAZMERKUCHKA3 + 1;
						RAZMERKUCHKA3 = KUCHKA1(RAZMERKUCHKA3, Drawnmatches);
					}
				}
				default:
				{
					cout << endl << "ERROR";
				}
				break;
			}
		}
		else
		{
			cout << "Player - Win!!" <<endl;
			konec = false;
			break;
		}
	}
}
void FUNKCIAEvE(int originalsize)
{
	int RAZMERKUCHKA1, RAZMERKUCHKA2, RAZMERKUCHKA3, NUMBER, Drawnmatches;
	RAZMERKUCHKA1 = originalsize;
	RAZMERKUCHKA2 = originalsize;
	RAZMERKUCHKA3 = originalsize;
	bool konec;
	konec = true;
	while (konec == true)
	{
		if ((RAZMERKUCHKA1 + RAZMERKUCHKA2 + RAZMERKUCHKA3) != 0)
		{
			NUMBER = rand() % 3 + 1;
			switch (NUMBER)
			{
				case 1:
				{
					if (RAZMERKUCHKA1 == 0)
					{
						continue;
					}
					else
					{
						Drawnmatches = rand() % RAZMERKUCHKA1 + 1;
						RAZMERKUCHKA1 = KUCHKA1(RAZMERKUCHKA1, Drawnmatches);
					}
					break;
				}
				case 2:
				{
					if (RAZMERKUCHKA2 == 0)
					{
						continue;
					}
					else
					{
						Drawnmatches = rand() % RAZMERKUCHKA2 + 1;
						RAZMERKUCHKA2 = KUCHKA1(RAZMERKUCHKA2, Drawnmatches);
					}
					break;
				}
				case 3:
				{
					if (RAZMERKUCHKA3 == 0)
					{
						continue;
					}
					else
					{
						Drawnmatches = rand() % RAZMERKUCHKA3 + 1;
						RAZMERKUCHKA3 = KUCHKA1(RAZMERKUCHKA3, Drawnmatches);
					}
					break;
				}
				default:
				{
					cout << endl << "ERROR";
				}
			}
		}
		else
		{
			cout << "Computer2 - Win!!" <<endl;
			konec = false;
			break;
		}
		if ((RAZMERKUCHKA1 + RAZMERKUCHKA2 + RAZMERKUCHKA3) != 0)
		{
			NUMBER = rand() % 3 + 1;
			switch (NUMBER)
			{
			case 1:
			{
				if (RAZMERKUCHKA1 == 0)
				{
					continue;
				}
				else
				{
					Drawnmatches = rand() % RAZMERKUCHKA1 + 1;
					RAZMERKUCHKA1 = KUCHKA1(RAZMERKUCHKA1, Drawnmatches);
				}
				break;
			}
			case 2:
			{
				if (RAZMERKUCHKA2 == 0)
				{
					continue;
				}
				else
				{
					Drawnmatches = rand() % RAZMERKUCHKA2 + 1;
					RAZMERKUCHKA2 = KUCHKA1(RAZMERKUCHKA2, Drawnmatches);
				}
				break;
			}
			case 3:
			{
				if (RAZMERKUCHKA3 == 0)
				{
					continue;
				}
				else
				{
					Drawnmatches = rand() % RAZMERKUCHKA3 + 1;
					RAZMERKUCHKA3 = KUCHKA1(RAZMERKUCHKA3, Drawnmatches);
				}
				break;
			}
			default:
			{
				cout << endl << "ERROR";
			}
			}
		}
		else
		{
			cout << "Computer1 - Win!!";
			konec = false;
			break;
		}
	}
}
int main()
{
	setlocale(LC_ALL, "Russian");
	int GAMEMODE, originalsize, PvP, PvE, EvE;
	cout << "Доступные режимы: 1)PvP 2)PvE 3)EvE" << endl << "Введите номер режима: ";
	cin >> GAMEMODE;
	switch(GAMEMODE)
	{
		case 1:
		{
			cout <<endl << "Введите исходное колличество спичек: ";
			cin >> originalsize;
			FUNKCIAPvP(originalsize);
			break;
		}
		case 2:
		{
			cout << endl << "Введите исходное колличество спичек: ";
			cin >> originalsize;
			FUNKCIAPvE(originalsize);
			break;
		}
		case 3:
		{
			cout << endl << "Введите исходное колличество спичек: ";
			cin >> originalsize;
			FUNKCIAEvE(originalsize);
			break;
		}
		default:
		{
			cout << "ERROR";
		}
	}
	return 0;
}