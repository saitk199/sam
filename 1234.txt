#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
using namespace std;
int KUCHKA(int RAZMERKUCHKA, int Drawnmatches)
{
	RAZMERKUCHKA = RAZMERKUCHKA - Drawnmatches;
	return RAZMERKUCHKA;
}
int NextPlayer(int CurrentPlayer)
{
	if (CurrentPlayer == 1)
	{
		return 2;
	}
	if (CurrentPlayer == 2)
	{
		return 1;
	}
	return -1;
}
void FUNKCIAPvP(int originalsize)
{
	int RAZMERKUCHKA[3], NUMBER, Drawnmatches, PLAYERNUMBER = 1;
	RAZMERKUCHKA[0] = originalsize;
	RAZMERKUCHKA[1] = originalsize;
	RAZMERKUCHKA[2] = originalsize;
	while ((RAZMERKUCHKA[0] + RAZMERKUCHKA[1] + RAZMERKUCHKA[2]) > 0)
	{
		cout <<endl << "Player " << PLAYERNUMBER <<endl << "Выберете одну из 3-х кучек: ";
		cin >> NUMBER;
		cout << endl << "Введите количество вытягиваемых спичек: ";
		cin >> Drawnmatches;
		if (RAZMERKUCHKA[NUMBER - 1] == 0)
		{
			cout << "Выберете другую кучку эта пустая" << endl;
			continue;
		}
		else
		{
			if (Drawnmatches > RAZMERKUCHKA[NUMBER - 1])
			{
				cout << endl << "Выберете другое количество спичек (не более " << RAZMERKUCHKA[NUMBER - 1] << " штук): ";
				cin >> Drawnmatches;
			}
			RAZMERKUCHKA[NUMBER - 1] = KUCHKA(RAZMERKUCHKA[NUMBER - 1], Drawnmatches);
			PLAYERNUMBER = NextPlayer(PLAYERNUMBER);
		}
		for (int i = 0;i < 3;i++)
		{
			cout << RAZMERKUCHKA[i] <<" ";
		}
	}
	cout << endl << "Player " << NextPlayer(PLAYERNUMBER) << " - Win!!" << endl;
}
void FUNKCIAPvE(int originalsize)
{
	int RAZMERKUCHKA[3], NUMBER, Drawnmatches, PLAYERNUMBER = 1;
	RAZMERKUCHKA[0] = originalsize;
	RAZMERKUCHKA[1] = originalsize;
	RAZMERKUCHKA[2] = originalsize;
	while ((RAZMERKUCHKA[0] + RAZMERKUCHKA[1] + RAZMERKUCHKA[2]) > 0)
	{
		if (PLAYERNUMBER == 1)
		{
			cout << endl << "Player " << PLAYERNUMBER << endl << "Выберете одну из 3-х кучек: ";
			cin >> NUMBER;
			cout << endl << "Введите количество вытягиваемых спичек: ";
			cin >> Drawnmatches;
		}
		else
		{
			NUMBER = rand() % 3 + 1;
		}
		if (RAZMERKUCHKA[NUMBER - 1] == 0)
		{
			if (PLAYERNUMBER == 1)
			{
				cout << "Выберете другую кучку эта пустая" << endl;
				continue;
			}
			else
			{
				continue;
			}
		}
		else
		{
			if (PLAYERNUMBER == 1)
			{
				if (Drawnmatches > RAZMERKUCHKA[NUMBER - 1])
				{
					cout << endl << "Выберете другое количество спичек (не более " << RAZMERKUCHKA[NUMBER - 1] << " штук): ";
					cin >> Drawnmatches;
				}
			}
			else
			{
				Drawnmatches = rand() % RAZMERKUCHKA[NUMBER - 1] + 1;
				cout << endl << "Компьютер " << PLAYERNUMBER << " взял из " << NUMBER << "-ей кучки " << Drawnmatches << " спичек" << endl;
			}
			RAZMERKUCHKA[NUMBER - 1] = KUCHKA(RAZMERKUCHKA[NUMBER - 1], Drawnmatches);
			PLAYERNUMBER = NextPlayer(PLAYERNUMBER);
		}
		for (int i = 0;i < 3;i++)
		{
			cout << RAZMERKUCHKA[i] << " ";
		}
	}
	if (NextPlayer(PLAYERNUMBER) == 1)
	{
		cout << endl << "Player - Win!!" << endl;
	}
	else
	{
		cout << endl << "Computer - Win!!" << endl;
	}
}
void FUNKCIAEvE(int originalsize)
{
	int RAZMERKUCHKA[3], NUMBER, Drawnmatches, ComputerNUMBER=1;
	RAZMERKUCHKA[0] = originalsize;
	RAZMERKUCHKA[1] = originalsize;
	RAZMERKUCHKA[2] = originalsize;
	while ((RAZMERKUCHKA[0] + RAZMERKUCHKA[1] + RAZMERKUCHKA[2]) != 0)
	{
		NUMBER = rand() % 3 + 1;
		if (RAZMERKUCHKA[NUMBER-1] == 0)
		{
			continue;
		}
		else
		{
			Drawnmatches = rand() % RAZMERKUCHKA[NUMBER - 1] + 1;
			cout <<endl << "Компьютер " << ComputerNUMBER << " взял из " << NUMBER <<"-ей кучки " << Drawnmatches <<" спичек" <<endl;
			RAZMERKUCHKA[NUMBER - 1] = KUCHKA(RAZMERKUCHKA[NUMBER - 1], Drawnmatches);
			ComputerNUMBER = NextPlayer(ComputerNUMBER);
		}
		for (int i = 0; i < 3;i++)
		{
			cout << RAZMERKUCHKA[i] << " ";
		}
	}
	if (NextPlayer(ComputerNUMBER) == 1)
	{
		cout << endl << "Computer 1 - Win!!" << endl;
	}
	else
	{
		cout << endl << "Computer 2 - Win!!" << endl;
	}
}
int main()
{
	setlocale(LC_ALL, "Russian");
	int GAMEMODE, originalsize, PvP, PvE, EvE;
	cout << "Доступные режимы: 1)PvP 2)PvE 3)EvE" << endl << "Введите номер режима: ";
	cin >> GAMEMODE;
	switch(GAMEMODE)
	{
		case 1:
		{
			cout <<endl << "Введите исходное колличество спичек: ";
			cin >> originalsize;
			FUNKCIAPvP(originalsize);
			break;
		}
		case 2:
		{
			cout << endl << "Введите исходное колличество спичек: ";
			cin >> originalsize;
			FUNKCIAPvE(originalsize);
			break;
		}
		case 3:
		{
			cout << endl << "Введите исходное колличество спичек: ";
			cin >> originalsize;
			FUNKCIAEvE(originalsize);
			break;
		}
		default:
		{
			cout << "ERROR";
		}
	}
	return 0;
}